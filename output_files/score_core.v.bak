// score_core.v : score += popcount(hit_mask) when hit_pulse=1.
module score_core(
    input  wire        clk,
    input  wire        rst,
    input  wire        hit_pulse,
    input  wire [7:0]  hit_mask,
    output reg  [15:0] score
);
    wire [3:0] hits = hit_mask[0] + hit_mask[1] + hit_mask[2] + hit_mask[3]
                    + hit_mask[4] + hit_mask[5] + hit_mask[6] + hit_mask[7];

    wire [15:0] sum = score + hits;

    always @(posedge clk) begin
        if (rst) score <= 16'd0;
        else if (hit_pulse) score <= (sum < score) ? 16'hFFFF : sum; // saturate on overflow
    end
endmodule
