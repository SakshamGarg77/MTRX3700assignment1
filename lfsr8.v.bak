// lfsr8.v : 8-bit maximal LFSR (x^8 + x^6 + x^5 + x^4 + 1)
// Advance one step when en=1 (synchronous to clk).
module lfsr8(
    input  wire       clk,
    input  wire       rst,     // active-high, synchronous
    input  wire       en,
    output reg  [7:0] rnd      // never all-zeros
);
    wire fb = rnd[7] ^ rnd[5] ^ rnd[4] ^ rnd[3];

    always @(posedge clk) begin
        if (rst)      rnd <= 8'hA5;          // non-zero seed
        else if (en)  rnd <= {rnd[6:0], fb}; // shift with feedback
    end
endmodule
